# Generated by Django 4.2.25 on 2025-10-07 20:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Korisnik',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id_korisnik', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('sifra', models.CharField(max_length=255)),
                ('ime', models.CharField(max_length=255)),
                ('uloga', models.CharField(max_length=7)),
                ('telefon', models.CharField(blank=True, max_length=20, null=True)),
                ('adresa', models.CharField(blank=True, max_length=255, null=True)),
                ('opis', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'korisnik',
            },
        ),
        migrations.CreateModel(
            name='Kategorija',
            fields=[
                ('id_kategorija', models.AutoField(primary_key=True, serialize=False)),
                ('putanja_slike', models.CharField(blank=True, max_length=255, null=True)),
                ('naziv', models.CharField(max_length=45, unique=True)),
                ('vrsta', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'kategorija',
            },
        ),
        migrations.CreateModel(
            name='Mesto',
            fields=[
                ('id_mesto', models.AutoField(primary_key=True, serialize=False)),
                ('naziv', models.CharField(max_length=45, unique=True)),
            ],
            options={
                'db_table': 'mesto',
            },
        ),
        migrations.CreateModel(
            name='Zahtev',
            fields=[
                ('id_zahtev', models.AutoField(primary_key=True, serialize=False)),
                ('prilozeni_telefon', models.CharField(max_length=20)),
                ('prilozena_adresa', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=8)),
                ('komentar', models.TextField(blank=True, null=True)),
                ('datum_kreiranja', models.DateTimeField()),
                ('datum_obrade', models.DateTimeField(blank=True, null=True)),
                ('fk_admin', models.ForeignKey(blank=True, db_column='fk_admin', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='zahtev_fk_admin_set', to=settings.AUTH_USER_MODEL)),
                ('fk_kupac', models.ForeignKey(db_column='fk_kupac', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('fk_prilozeno_mesto', models.ForeignKey(blank=True, db_column='fk_prilozeno_mesto', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.mesto')),
            ],
            options={
                'db_table': 'zahtev',
            },
        ),
        migrations.CreateModel(
            name='Proizvod',
            fields=[
                ('id_proizvod', models.AutoField(primary_key=True, serialize=False)),
                ('naziv', models.CharField(max_length=100)),
                ('opis', models.TextField(blank=True, null=True)),
                ('putanja_slike', models.CharField(blank=True, max_length=255, null=True)),
                ('nacin_uzgoja', models.CharField(max_length=8)),
                ('dostupnost', models.IntegerField()),
                ('datum_kreiranja', models.DateTimeField()),
                ('fk_domacin', models.ForeignKey(db_column='fk_domacin', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('fk_kategorija', models.ForeignKey(blank=True, db_column='fk_kategorija', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.kategorija')),
            ],
            options={
                'db_table': 'proizvod',
            },
        ),
        migrations.CreateModel(
            name='Obavestenje',
            fields=[
                ('id_obavestenje', models.AutoField(primary_key=True, serialize=False)),
                ('sadrzaj', models.TextField(blank=True, null=True)),
                ('datum_kreiranja', models.DateTimeField(blank=True, null=True)),
                ('vidljivost', models.IntegerField()),
                ('fk_admin', models.ForeignKey(blank=True, db_column='fk_admin', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('fk_zahtev', models.ForeignKey(blank=True, db_column='fk_zahtev', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.zahtev')),
            ],
            options={
                'db_table': 'obavestenje',
            },
        ),
        migrations.AddField(
            model_name='korisnik',
            name='fk_mesto',
            field=models.ForeignKey(blank=True, db_column='fk_mesto', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.mesto'),
        ),
        migrations.AddField(
            model_name='korisnik',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='korisnik',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
